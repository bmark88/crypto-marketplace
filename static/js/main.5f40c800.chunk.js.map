{"version":3,"sources":["components/FavouriteCoins/FavouriteCoins.component.jsx","components/NavHeader/NavHeader.component.jsx","components/AllCoins/AllCoins.component.jsx","components/DropDownMenu/DropDownMenu.component.jsx","components/SelectedCoin/SelectedCoin.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["FavouriteCoins","props","favoriteCoins","removeFavoriteCoin","length","className","map","coin","idx","onClick","coinName","width","height","src","coinImage","alt","coinSymbol","NavHeader","coins","AllCoins","id","name","total_supply","market_cap","current_price","DropDownMenu","dropDownName","setCurrency","tradeCurrency","onChange","value","useState","open","setOpen","e","preventDefault","placeholder","viewBox","fill","xmlns","clipPath","d","SelectedCoin","selectedCoin","coinDetails","setFavorites","setTradeCurrency","tradeAmount","setTradeAmount","successMessage","setSuccessMessage","tradeMethod","setTradeMethod","handleChange","target","handleTradeMethod","innerText","toLowerCase","image","low_24h","high_24h","circulating_supply","toFixed","market_cap_rank","symbol","onSubmit","selectedCoinProperties","filter","toUpperCase","tradeCurrencyProperties","purchasedAmount","soldAmount","buyMessage","sellMessage","App","storedCoins","localStorage","getItem","JSON","parse","setSelectedCoin","setCoinDetails","setCoins","setFavoriteCoins","fetchCoins","a","fetch","then","res","json","catch","console","error","useEffect","setItem","stringify","favoriteCoinsAfterRemovedFavorite","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f40c800.chunk.js","sourcesContent":["import React from 'react';\n\nimport './FavouriteCoins.styles.scss';\n\nconst FavouriteCoins = (props) => {\n  const { favoriteCoins, removeFavoriteCoin } = props;\n\n  return (\n    <>\n      <h1>Favourite Coins</h1>\n      {favoriteCoins.length === 0 ? <h2>No Favourite Coins Added</h2> : \n        <div className='fav-coin-list container'>\n        {favoriteCoins.map((coin, idx) => \n          <div \n            className='fav-coin-padding' \n            key={idx} \n            onClick={() => removeFavoriteCoin(coin.coinName)}\n          > {/* index should not be used as key, but is used temporarily to handle errors when the same fav coin is added  */}\n            <div className='fav-coin'>\n              <span>\n                <img \n                  className='fav-coin-image' \n                  width='19px' \n                  height='19px' \n                  src={coin.coinImage}\n                  alt='coin logo'\n                />\n                <p className='coin-full-name'>{coin.coinName}</p>\n                <p className='coin-ticker'>{coin.coinSymbol}</p>\n              </span>\n            </div>\n          </div>\n        )}\n        </div>\n      }\n    </>\n  );\n};\n\nexport default FavouriteCoins;","import React from 'react';\n\nimport FavouriteCoins from '../FavouriteCoins/FavouriteCoins.component';\n\nimport './NavHeader.styles.scss';\n\nconst NavHeader = (props) => (\n  <nav className='nav-header'>\n    <section className='favourite-coins container'>\n      <FavouriteCoins \n        favoriteCoins={props.favoriteCoins} \n        coins={props.coins} \n        removeFavoriteCoin={props.removeFavoriteCoin}\n      />\n    </section>\n  </nav>\n);\n\nexport default NavHeader;","import React from 'react';\n\nimport './AllCoins.styles.scss';\n\n\nconst AllCoins = (props) => {  \n  const { onClick, coins } = props;\n\n  return (\n    <section className='all-coins container'> \n      <h3>All coins</h3>\n      <div className='coin-chart'>\n        <ul className='coin-list'>\n          <li className='coin-header-name'>\n            <h4 className='coin-name'>Name</h4>\n            <h4 className='additional-details'>Total Supply</h4>\n            <h4 className='additional-details'>Market Cap</h4>\n            <h4>Current Price</h4>\n          </li>\n          {coins && coins.map(coin => {\n            const { id, name, total_supply, market_cap, current_price } = coin;\n\n            return (\n              <li key={id}>\n                <span className='coin-name' onClick={onClick}>{name ? name : 'N/A'}</span>\n                <span className='additional-details'>\n                  {total_supply ? total_supply : 'N/A'}\n                </span>\n                <span className='additional-details'>\n                  {market_cap ? market_cap : 'N/A'}\n                </span>\n                <span>${current_price ? current_price : 'N/A'}</span>\n              </li>\n            )}\n          )}\n        </ul>\n      </div>\n    </section>\n  );\n};\n\nexport default AllCoins;","import React, { useState } from 'react';\n\nimport './DropDownMenu.styles.scss';\n\nconst DropDownMenu = (props) => {\n  const { dropDownName, setCurrency, coins, tradeCurrency, id, onChange, value } = props;\n  const [open, setOpen] = useState(false);\n\n  const handleClick = (e) => { \n    e.preventDefault();\n    \n    setOpen(!open);\n  };\n\n  return (\n    <>\n    <div\n      id={id}\n      className='drop-down-menu' \n      onClick={handleClick}\n    >\n      {id === 'select-trade-currency' && \n        <input \n          value={tradeCurrency} \n          onChange={onChange} \n          placeholder='Select Trade Currency'>\n        </input>\n      }\n      {id === 'amount' && \n        <input \n          value={value}\n          onChange={onChange} \n          placeholder='Amount'>\n        </input>\n      }\n      <svg width=\"10\" height=\"6\" viewBox=\"0 0 10 6\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g clipPath=\"url(#clip0)\">\n      <path d=\"M4.67824 3.15287L6.51199 1.31758C6.88815 0.94111 7.2643 0.56464 7.64045 0.188169C7.78151 -6.58743e-05 8.04012 -0.0235953 8.2282 0.117581C8.25171 0.141111 8.27522 0.16464 8.29872 0.188169C8.58084 0.470522 8.86296 0.752875 9.14507 1.03523C9.33315 1.1764 9.35666 1.43523 9.2156 1.62346C9.2156 1.62346 9.19209 1.64699 9.16858 1.67052L4.98386 5.83523C4.86631 6.02346 4.60771 6.07052 4.44314 5.95287C4.39612 5.92934 4.37261 5.88229 4.32559 5.83523C2.93852 4.44699 1.55145 3.05876 0.164383 1.67052C-0.0236944 1.52935 -0.047204 1.27052 0.0938539 1.10582C0.117364 1.08229 0.140873 1.05876 0.164383 1.03523C0.446499 0.729346 0.705105 0.470522 0.987221 0.188169C1.26934 -0.0941835 1.45741 -0.0471247 1.69251 0.188169C2.6329 1.10582 3.54977 2.04699 4.49016 2.98817C4.53718 3.03523 4.60771 3.08229 4.67824 3.15287Z\" fill=\"black\"/>\n      </g>\n      <defs>\n      <clipPath id=\"clip0\">\n      <rect width=\"9.33333\" height=\"6\" fill=\"white\"/>\n      </clipPath>\n      </defs>\n      </svg>\n    </div>\n    {id === 'select-trade-currency' &&\n    <div \n      className={`drop-down-list-items${open ? ' visible' : ''}`}\n    >\n        <ul>\n          <li>{dropDownName}</li>\n          {dropDownName === 'Select Trade Currency' && \n            coins.map(coin => <li key={coin.id} onClick={setCurrency}>{coin.name}</li>\n          )}\n        </ul>\n    </div>\n      }\n    </>\n  );\n};\n\nexport default DropDownMenu;","import React, { useState } from 'react';\n\nimport DropDownMenu from '../DropDownMenu/DropDownMenu.component';\n\nimport './SelectedCoin.styles.scss';\n\nconst SelectedCoin = (props) => {\n  const { selectedCoin, coinDetails, coins, setFavorites } = props;\n\n  const [tradeCurrency, setTradeCurrency] = useState('');\n  const [tradeAmount, setTradeAmount] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [tradeMethod, setTradeMethod] = useState(null);\n\n  const handleCurrency = (e) => {\n    setTradeCurrency(e.target.innerText);\n  };\n  \n  const handleChange = (e) => {\n    e.preventDefault();\n\n    if (e.target.placeholder === 'Amount') {\n      setTradeAmount(e.target.value)\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!selectedCoin || !tradeCurrency || !tradeAmount) {\n      if (!tradeMethod) {\n        return setSuccessMessage('Please choose an option to buy or sell your coins.');\n      }\n\n      return setSuccessMessage('Please make sure a trade currency is selected with an amount.');\n    }\n\n    const selectedCoinProperties = coins.filter(coin => \n      coin.name.toUpperCase() === selectedCoin)[0];\n\n    const tradeCurrencyProperties = coins.filter(coin => \n      coin.name === tradeCurrency)[0];\n        \n    const purchasedAmount = tradeCurrencyProperties.current_price * tradeAmount / (selectedCoinProperties.current_price);\n\n    const soldAmount = (tradeCurrencyProperties.current_price) / selectedCoinProperties.current_price * tradeAmount;\n\n    if (tradeAmount && tradeCurrencyProperties && purchasedAmount && selectedCoinProperties) {\n\n      if (tradeMethod === 'buy') {\n        const buyMessage = `You have Purchased ${tradeAmount} ${tradeCurrencyProperties.symbol.toUpperCase()} for ${purchasedAmount} ${selectedCoinProperties.symbol.toUpperCase()}`\n          \n        setSuccessMessage(buyMessage);\n      } else if (tradeMethod === 'sell') {\n        const sellMessage = `You have Sold ${tradeAmount} ${tradeCurrencyProperties.symbol.toUpperCase()} for ${soldAmount} ${selectedCoinProperties.symbol.toUpperCase()}`\n\n        setSuccessMessage(sellMessage);\n      }\n    }\n  };\n\n  const handleTradeMethod = (e) => {\n    setTradeMethod(e.target.innerText.toLowerCase());\n  };\n\n  return (\n    <section className='selected-coin container'>\n      {!selectedCoin && <h5>Select a coin to view more information</h5>}\n\n      {\n        selectedCoin && coinDetails && \n        <>\n          <div className='selected-coin-details'>\n            <span className='selected-coin-header'>\n              <img src={`${coinDetails.image}`} alt='coin logo'/>\n              <h4>{coinDetails.name}</h4>\n            </span>\n            <ul className='details-list'>\n              <li><span>Current Price: </span>${coinDetails.current_price}</li>\n              <li><span>Market Cap: </span>{coinDetails.market_cap}</li>\n              <li><span>Low 24h: </span>{coinDetails.low_24h}</li>\n              <li><span>High 24h: </span>{coinDetails.high_24h}</li>\n              <li><span>Circulating Supply: </span>{coinDetails.circulating_supply.toFixed(0)}</li>\n              <li><span>Total Supply: </span>{coinDetails.total_supply}</li>\n              <li><span>Market Cap Rank: </span>{coinDetails.market_cap_rank}</li>\n            </ul>\n            <div id='add-to-favourites-button' onClick={() => setFavorites(coinDetails.image, coinDetails.name, coinDetails.symbol)}>\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M7.8 0C3.5 0 0 3.5 0 7.8C0 12.1 3.5 15.6 7.8 15.6C12.1 15.6 15.6 12.1 15.6 7.8C15.6 3.5 12 0 7.8 0ZM7.8 14C4.4 14 1.6 11.2 1.6 7.8C1.6 4.4 4.4 1.6 7.8 1.6C11.2 1.6 14 4.3 14 7.8C14 11.3 11.2 14 7.8 14ZM11.8 7.8C11.8 8.2 11.5 8.6 11 8.6H8.5V11C8.5 11.4 8.2 11.8 7.7 11.8C7.2 11.8 7 11.5 7 11V8.5H4.5C4 8.5 3.7 8.2 3.7 7.8C3.7 7.4 4 7 4.5 7H7V4.5C7 4 7.3 3.7 7.8 3.7C8.3 3.7 8.5 4 8.5 4.5V7H11C11.5 7 11.8 7.3 11.8 7.8Z\" fill=\"#4A90E2\"/>\n              </svg>\n              <p>Add To Favourites</p>\n            </div>\n          </div>\n          <div className='trade-options'>\n            <div className='buy-sell-buttons'>\n              <button \n                className={tradeMethod === 'buy' ? 'selected' : ''} \n                onClick={handleTradeMethod}>\n                  Buy\n              </button>\n              <button \n                className={tradeMethod === 'sell' ? 'selected' : ''} \n                onClick={handleTradeMethod}\n              >\n                Sell\n              </button>\n            </div>\n            <div className='trade-selectors'>\n              <form onSubmit={handleSubmit}>\n                <DropDownMenu \n                  id='select-trade-currency'\n                  dropDownName='Select Trade Currency' \n                  coins={coins}\n                  onChange={handleChange}\n                  setCurrency={handleCurrency}\n                  tradeCurrency={tradeCurrency}\n                />\n                <DropDownMenu \n                  id='amount'\n                  dropDownName='Amount' \n                  coins={coins}\n                  onChange={handleChange}\n                  value={tradeAmount}\n                  selectedCoin={selectedCoin}\n                />\n                <button>Submit</button>\n                <p className='success-message'>{successMessage}</p>\n              </form>\n            </div>\n        </div>\n        </>\n      }\n    </section>\n  );\n};\n\nexport default SelectedCoin;","import { useState, useEffect } from 'react';\n\nimport './App.css';\n\nimport NavHeader from './components/NavHeader/NavHeader.component';\nimport AllCoins from './components/AllCoins/AllCoins.component';\nimport SelectedCoin from './components/SelectedCoin/SelectedCoin.component';\n\nfunction App() {\n  let storedCoins = []\n\n  if (localStorage.getItem('favoriteCoins')) {\n    storedCoins = JSON.parse(localStorage.getItem('favoriteCoins'))[0];\n  }\n\n  const [selectedCoin, setSelectedCoin] = useState();\n  const [coinDetails, setCoinDetails] = useState();\n  const [coins, setCoins] = useState();\n  const [favoriteCoins, setFavoriteCoins] = useState(storedCoins);\n\n  const fetchCoins = async () => {\n    return await fetch(\n      'https://api.coingecko.com/api/v3/coins/markets?vs_currency=cad')\n      .then(res => res.json())\n      .then(coins => setCoins(coins.map(coin => coin)))\n      .catch(() => console.error('error with fetching coins'));\n  };\n\n  useEffect(() => {\n    fetchCoins();\n  }, []);\n\n  useEffect(() => {\n    if (coins && selectedCoin) {\n      setCoinDetails(coins.filter(coin => \n        coin.name.toLowerCase() === selectedCoin.toLowerCase())[0]\n      )\n    }\n  }, [selectedCoin, coins]);\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    setSelectedCoin(e.target.innerText);\n  };\n\n  const handleAddToFavorites = (coinImage, coinName, coinSymbol) => {\n    if (!favoriteCoins.filter(coin => coin.coinName === coinName)[0]) {\n      setFavoriteCoins([...favoriteCoins, { coinImage, coinName, coinSymbol }]);\n    }\n  };\n\n  const handleRemoveFromFavorites = (coinName) => {\n    const favoriteCoinsAfterRemovedFavorite = favoriteCoins.filter(coin => coin.coinName !== coinName)\n    setFavoriteCoins([...favoriteCoinsAfterRemovedFavorite]);\n  };\n\n  useEffect(() => {\n    localStorage.setItem('favoriteCoins', JSON.stringify([favoriteCoins]));\n  }, [favoriteCoins])\n\n  return (\n    <>\n      <NavHeader \n        favoriteCoins={favoriteCoins} \n        removeFavoriteCoin={handleRemoveFromFavorites}\n      />\n      <AllCoins \n        onClick={handleClick} \n        coins={coins} \n      />\n      <SelectedCoin \n        selectedCoin={selectedCoin} \n        coins={coins} \n        coinDetails={coinDetails}\n        setFavorites={handleAddToFavorites}\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}